#!/usr/bin/env bash

# this is a simple config for herbstluftwm | это простой конфиг для herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ keybindings | сочетания клавиш ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# remove all existing keybindings | удалить все существующие сочетания клавиш
hc keyunbind --all

# if you have a super key you will be much happier with Mod set to Mod4
# если у вас есть супер-ключ, вы будете намного счастливее, если Mod будет установлен на Mod4
Mod=Mod1    # Use alt as the main modifier | Используйте alt в качестве основного модификатора
#Mod=Mod4   # Use the super key as the main modifier | Используйте супер-ключ в качестве основного модификатора

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
hc keybind $Mod-Return spawn "${TERMINAL:-xterm}" # use your $TERMINAL with xterm as fallback

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right


# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
hc keybind $Mod-a       split   right   0.3
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ tags ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Names to Display on Menu...
#tag_names=( {1..10} )
tag_names=("Music" "Terminator" "Xterm" "Firefox" "5" "6" "7" "8" "9") 

########### Set Keys for accessing Tags/Workspaces
# Qwerty Keyboard Settings

tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" chain , move_index "$i" , use_index "$i"
    fi
done
# ~~~~~~~~ Автоматическая переключалка тегов ~~~~~~~
#tag_names=( {1..9} )
#tag_keys=( {1..9} 0 )
#
#hc rename default "${tag_names[0]}" || true
#for i in "${!tag_names[@]}" ; do
#    hc add "${tag_names[$i]}"
#    key="${tag_keys[$i]}"
#    if ! [ -z "$key" ] ; then
#        hc keybind "$Mod-$key" use_index "$i"
#        hc keybind "$Mod-Shift-$key" move_index "$i"
#    fi
#done
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#ff0000'
hc set frame_border_normal_color '#200020'
hc set frame_bg_normal_color '#800080'
hc set frame_bg_active_color '#040020'
hc set frame_border_width 1
hc set always_show_frame on
hc set frame_bg_transparent on
hc set frame_transparent_width 5
hc set frame_gap 4

hc attr theme.active.color '#800080'
hc attr theme.normal.color '#98fb98'
hc attr theme.urgent.color orange
hc attr theme.inner_width 1
hc attr theme.inner_color black
hc attr theme.border_width 3
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
#
hc attr theme.active.inner_color '#98fb98'
#
hc attr theme.active.outer_color '#98fb98'
#
hc attr theme.background_color '#98fb98'

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings off
hc set smart_frame_surroundings on
hc set mouse_recenter_gap 0

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
# hc detect_monitors

# find the panel
panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" "$monitor" &
done

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Установить обои на каждом теге ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# This code was modified from Thorsten by me:
# https://bbs.archlinux.org/viewtopic.php?pid=1024618#p1024618

# sets a tag defined wallpaper when tag changes
declare -A WALLPAPER

# These wallpapers come with Deepin desktop environment, but also look great in hlwm
DIR=/etc/xdg/herbstluftwm
WALLPAPER=(
# [0] Нулевыевые обои будут обоями для всех окон по умолчанию
  [0]=$DIR/background.png
# [9] В девятом окне стоит backgroundMars.jpg
  [9]=$DIR/backgroundMars.jpg
# Дальше не понимаю
# [file]=$DIR/backgroundMars.jpg
# [edit]=$DIR/backgroundMars.jpg
# [read]=$DIR/backgroundMars.jpg
# [browse]=$DIR/backgroundMars.jpg
# [draw]=$DIR/backgroundMars.jpg
# [watch]=$DIR/backgroundMars.jpg
# [hear]=$DIR/background.png
# [mail]=$DIR/background.png
# [chat]=$DIR/background.png
)


# it should (hopefully) die on reload
herbstclient --idle '(tag_changed|reload)' \
    | while read line ; do
    ARGS=( $line )
    HOOK=${ARGS[0]}
    TAG=${ARGS[1]}
    case $HOOK in
	reload)
	    exit 1
	    ;;
	quit_panel)
	    exit 1
	    ;;
	tag_changed)
	    if ! [ -z "${WALLPAPER[$TAG]}" ] ; then
		# there is a wallpaper for this tag
		CUR=${WALLPAPER[$TAG]}
	    else
		# there is no wallpaper for this tag -> fall back
		CUR=${WALLPAPER[0]}
	    fi
	    echo "setting wallpaper to $CUR"
	    feh --bg-scale $CUR
	    ;;
	*) ;;
    esac
done

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
